/* This file is autogenerated by scripts/decodetree.py.  */

typedef struct {
    int base;
    int rt;
    int offset;
} arg_itype;

typedef struct {
    int rs;
    int rt;
    int rd;
    int sa;
} arg_rtype;

typedef arg_rtype arg_MFHI1;
static bool trans_MFHI1(DisasContext *ctx, arg_MFHI1 *a);
typedef arg_rtype arg_MTHI1;
static bool trans_MTHI1(DisasContext *ctx, arg_MTHI1 *a);
typedef arg_rtype arg_MFLO1;
static bool trans_MFLO1(DisasContext *ctx, arg_MFLO1 *a);
typedef arg_rtype arg_MTLO1;
static bool trans_MTLO1(DisasContext *ctx, arg_MTLO1 *a);
typedef arg_rtype arg_PSUBW;
static bool trans_PSUBW(DisasContext *ctx, arg_PSUBW *a);
typedef arg_rtype arg_PCGTW;
static bool trans_PCGTW(DisasContext *ctx, arg_PCGTW *a);
typedef arg_rtype arg_PSUBH;
static bool trans_PSUBH(DisasContext *ctx, arg_PSUBH *a);
typedef arg_rtype arg_PCGTH;
static bool trans_PCGTH(DisasContext *ctx, arg_PCGTH *a);
typedef arg_rtype arg_PSUBB;
static bool trans_PSUBB(DisasContext *ctx, arg_PSUBB *a);
typedef arg_rtype arg_PCGTB;
static bool trans_PCGTB(DisasContext *ctx, arg_PCGTB *a);
typedef arg_rtype arg_PEXTLW;
static bool trans_PEXTLW(DisasContext *ctx, arg_PEXTLW *a);
typedef arg_rtype arg_PPACW;
static bool trans_PPACW(DisasContext *ctx, arg_PPACW *a);
typedef arg_rtype arg_PEXTLH;
static bool trans_PEXTLH(DisasContext *ctx, arg_PEXTLH *a);
typedef arg_rtype arg_PEXTLB;
static bool trans_PEXTLB(DisasContext *ctx, arg_PEXTLB *a);
typedef arg_rtype arg_PCEQW;
static bool trans_PCEQW(DisasContext *ctx, arg_PCEQW *a);
typedef arg_rtype arg_PCEQH;
static bool trans_PCEQH(DisasContext *ctx, arg_PCEQH *a);
typedef arg_rtype arg_PCEQB;
static bool trans_PCEQB(DisasContext *ctx, arg_PCEQB *a);
typedef arg_rtype arg_PEXTUW;
static bool trans_PEXTUW(DisasContext *ctx, arg_PEXTUW *a);
typedef arg_rtype arg_PCPYLD;
static bool trans_PCPYLD(DisasContext *ctx, arg_PCPYLD *a);
typedef arg_rtype arg_PAND;
static bool trans_PAND(DisasContext *ctx, arg_PAND *a);
typedef arg_rtype arg_PXOR;
static bool trans_PXOR(DisasContext *ctx, arg_PXOR *a);
typedef arg_rtype arg_PROT3W;
static bool trans_PROT3W(DisasContext *ctx, arg_PROT3W *a);
typedef arg_rtype arg_PCPYUD;
static bool trans_PCPYUD(DisasContext *ctx, arg_PCPYUD *a);
typedef arg_rtype arg_POR;
static bool trans_POR(DisasContext *ctx, arg_POR *a);
typedef arg_rtype arg_PNOR;
static bool trans_PNOR(DisasContext *ctx, arg_PNOR *a);
typedef arg_rtype arg_PCPYH;
static bool trans_PCPYH(DisasContext *ctx, arg_PCPYH *a);
typedef arg_itype arg_LQ;
static bool trans_LQ(DisasContext *ctx, arg_LQ *a);
typedef arg_itype arg_SQ;
static bool trans_SQ(DisasContext *ctx, arg_SQ *a);

static void decode_tx79_extract_ldst(DisasContext *ctx, arg_itype *a, uint32_t insn)
{
    a->base = extract32(insn, 21, 5);
    a->rt = extract32(insn, 16, 5);
    a->offset = extract32(insn, 0, 16);
}

static void decode_tx79_extract_rd(DisasContext *ctx, arg_rtype *a, uint32_t insn)
{
    a->rd = extract32(insn, 11, 5);
    a->rs = 0;
    a->rt = 0;
    a->sa = 0;
}

static void decode_tx79_extract_rs(DisasContext *ctx, arg_rtype *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->rt = 0;
    a->rd = 0;
    a->sa = 0;
}

static void decode_tx79_extract_rs_rt_rd(DisasContext *ctx, arg_rtype *a, uint32_t insn)
{
    a->rs = extract32(insn, 21, 5);
    a->rt = extract32(insn, 16, 5);
    a->rd = extract32(insn, 11, 5);
    a->sa = 0;
}

static void decode_tx79_extract_rt_rd(DisasContext *ctx, arg_rtype *a, uint32_t insn)
{
    a->rt = extract32(insn, 16, 5);
    a->rd = extract32(insn, 11, 5);
    a->rs = 0;
    a->sa = 0;
}

static bool decode_tx79(DisasContext *ctx, uint32_t insn)
{
    union {
        arg_itype f_itype;
        arg_rtype f_rtype;
    } u;

    switch ((insn >> 26) & 0x3f) {
    case 0x1c:
        /* 011100.. ........ ........ ........ */
        switch (insn & 0x000007ff) {
        case 0x00000010:
            /* 011100.. ........ .....000 00010000 */
            decode_tx79_extract_rd(ctx, &u.f_rtype, insn);
            switch ((insn >> 16) & 0x3ff) {
            case 0x0:
                /* 01110000 00000000 .....000 00010000 */
                /* ../target/mips/tcg/tx79.decode:31 */
                if (trans_MFHI1(ctx, &u.f_rtype)) return true;
                break;
            }
            break;
        case 0x00000011:
            /* 011100.. ........ .....000 00010001 */
            decode_tx79_extract_rs(ctx, &u.f_rtype, insn);
            switch ((insn >> 11) & 0x3ff) {
            case 0x0:
                /* 011100.. ...00000 00000000 00010001 */
                /* ../target/mips/tcg/tx79.decode:32 */
                if (trans_MTHI1(ctx, &u.f_rtype)) return true;
                break;
            }
            break;
        case 0x00000012:
            /* 011100.. ........ .....000 00010010 */
            decode_tx79_extract_rd(ctx, &u.f_rtype, insn);
            switch ((insn >> 16) & 0x3ff) {
            case 0x0:
                /* 01110000 00000000 .....000 00010010 */
                /* ../target/mips/tcg/tx79.decode:33 */
                if (trans_MFLO1(ctx, &u.f_rtype)) return true;
                break;
            }
            break;
        case 0x00000013:
            /* 011100.. ........ .....000 00010011 */
            decode_tx79_extract_rs(ctx, &u.f_rtype, insn);
            switch ((insn >> 11) & 0x3ff) {
            case 0x0:
                /* 011100.. ...00000 00000000 00010011 */
                /* ../target/mips/tcg/tx79.decode:34 */
                if (trans_MTLO1(ctx, &u.f_rtype)) return true;
                break;
            }
            break;
        case 0x00000048:
            /* 011100.. ........ .....000 01001000 */
            /* ../target/mips/tcg/tx79.decode:38 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PSUBW(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000088:
            /* 011100.. ........ .....000 10001000 */
            /* ../target/mips/tcg/tx79.decode:39 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCGTW(ctx, &u.f_rtype)) return true;
            break;
        case 0x000000a8:
            /* 011100.. ........ .....000 10101000 */
            /* ../target/mips/tcg/tx79.decode:51 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCEQW(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000148:
            /* 011100.. ........ .....001 01001000 */
            /* ../target/mips/tcg/tx79.decode:40 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PSUBH(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000188:
            /* 011100.. ........ .....001 10001000 */
            /* ../target/mips/tcg/tx79.decode:41 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCGTH(ctx, &u.f_rtype)) return true;
            break;
        case 0x000001a8:
            /* 011100.. ........ .....001 10101000 */
            /* ../target/mips/tcg/tx79.decode:52 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCEQH(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000248:
            /* 011100.. ........ .....010 01001000 */
            /* ../target/mips/tcg/tx79.decode:42 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PSUBB(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000288:
            /* 011100.. ........ .....010 10001000 */
            /* ../target/mips/tcg/tx79.decode:43 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCGTB(ctx, &u.f_rtype)) return true;
            break;
        case 0x000002a8:
            /* 011100.. ........ .....010 10101000 */
            /* ../target/mips/tcg/tx79.decode:53 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCEQB(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000389:
            /* 011100.. ........ .....011 10001001 */
            /* ../target/mips/tcg/tx79.decode:58 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCPYLD(ctx, &u.f_rtype)) return true;
            break;
        case 0x000003a9:
            /* 011100.. ........ .....011 10101001 */
            /* ../target/mips/tcg/tx79.decode:65 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PCPYUD(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000488:
            /* 011100.. ........ .....100 10001000 */
            /* ../target/mips/tcg/tx79.decode:44 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PEXTLW(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000489:
            /* 011100.. ........ .....100 10001001 */
            /* ../target/mips/tcg/tx79.decode:59 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PAND(ctx, &u.f_rtype)) return true;
            break;
        case 0x000004a8:
            /* 011100.. ........ .....100 10101000 */
            /* ../target/mips/tcg/tx79.decode:54 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PEXTUW(ctx, &u.f_rtype)) return true;
            break;
        case 0x000004a9:
            /* 011100.. ........ .....100 10101001 */
            /* ../target/mips/tcg/tx79.decode:66 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_POR(ctx, &u.f_rtype)) return true;
            break;
        case 0x000004c8:
            /* 011100.. ........ .....100 11001000 */
            /* ../target/mips/tcg/tx79.decode:45 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PPACW(ctx, &u.f_rtype)) return true;
            break;
        case 0x000004c9:
            /* 011100.. ........ .....100 11001001 */
            /* ../target/mips/tcg/tx79.decode:60 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PXOR(ctx, &u.f_rtype)) return true;
            break;
        case 0x000004e9:
            /* 011100.. ........ .....100 11101001 */
            /* ../target/mips/tcg/tx79.decode:67 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PNOR(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000588:
            /* 011100.. ........ .....101 10001000 */
            /* ../target/mips/tcg/tx79.decode:46 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PEXTLH(ctx, &u.f_rtype)) return true;
            break;
        case 0x00000688:
            /* 011100.. ........ .....110 10001000 */
            /* ../target/mips/tcg/tx79.decode:47 */
            decode_tx79_extract_rs_rt_rd(ctx, &u.f_rtype, insn);
            if (trans_PEXTLB(ctx, &u.f_rtype)) return true;
            break;
        case 0x000006e9:
            /* 011100.. ........ .....110 11101001 */
            decode_tx79_extract_rt_rd(ctx, &u.f_rtype, insn);
            switch ((insn >> 21) & 0x1f) {
            case 0x0:
                /* 01110000 000..... .....110 11101001 */
                /* ../target/mips/tcg/tx79.decode:68 */
                if (trans_PCPYH(ctx, &u.f_rtype)) return true;
                break;
            }
            break;
        case 0x000007c9:
            /* 011100.. ........ .....111 11001001 */
            decode_tx79_extract_rt_rd(ctx, &u.f_rtype, insn);
            switch ((insn >> 21) & 0x1f) {
            case 0x0:
                /* 01110000 000..... .....111 11001001 */
                /* ../target/mips/tcg/tx79.decode:61 */
                if (trans_PROT3W(ctx, &u.f_rtype)) return true;
                break;
            }
            break;
        }
        break;
    case 0x1e:
        /* 011110.. ........ ........ ........ */
        /* ../target/mips/tcg/tx79.decode:72 */
        decode_tx79_extract_ldst(ctx, &u.f_itype, insn);
        if (trans_LQ(ctx, &u.f_itype)) return true;
        break;
    case 0x1f:
        /* 011111.. ........ ........ ........ */
        /* ../target/mips/tcg/tx79.decode:73 */
        decode_tx79_extract_ldst(ctx, &u.f_itype, insn);
        if (trans_SQ(ctx, &u.f_itype)) return true;
        break;
    }
    return false;
}
