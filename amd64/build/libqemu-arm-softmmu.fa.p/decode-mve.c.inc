/* This file is autogenerated by scripts/decodetree.py.  */

typedef struct {
    int qd;
    int imm;
    int cmode;
    int op;
} arg_1imm;

typedef struct {
    int qd;
    int qm;
    int size;
} arg_1op;

typedef struct {
    int qd;
    int qm;
    int qn;
    int size;
} arg_2op;

typedef struct {
    int qd;
    int qn;
    int rm;
    int size;
} arg_2scalar;

typedef struct {
    int qd;
    int qm;
    int shift;
    int size;
} arg_2shift;

typedef struct {
    int mask;
} arg_disas_mve10;

typedef struct {
    int imm;
    int rdm;
    int qd;
} arg_disas_mve11;

typedef struct {
    int u;
    int size;
    int a;
    int qm;
    int rda;
} arg_disas_mve8;

typedef struct {
    int u;
    int a;
    int qm;
    int rdahi;
    int rdalo;
} arg_disas_mve9;

typedef struct {
    int qd;
    int rt;
    int size;
} arg_vdup;

typedef struct {
    int rn;
    int qd;
    int imm;
    int p;
    int a;
    int w;
    int size;
    int l;
    int u;
} arg_vldr_vstr;

typedef struct {
    int rdahi;
    int rdalo;
    int size;
    int qn;
    int qm;
    int x;
    int a;
} arg_vmlaldav;

typedef arg_vldr_vstr arg_VLDSTB_H;
static bool trans_VLDSTB_H(DisasContext *ctx, arg_VLDSTB_H *a);
typedef arg_vldr_vstr arg_VLDSTB_W;
static bool trans_VLDSTB_W(DisasContext *ctx, arg_VLDSTB_W *a);
typedef arg_vldr_vstr arg_VLDSTH_W;
static bool trans_VLDSTH_W(DisasContext *ctx, arg_VLDSTH_W *a);
typedef arg_vldr_vstr arg_VLDR_VSTR;
static bool trans_VLDR_VSTR(DisasContext *ctx, arg_VLDR_VSTR *a);
typedef arg_2op arg_VAND;
static bool trans_VAND(DisasContext *ctx, arg_VAND *a);
typedef arg_2op arg_VBIC;
static bool trans_VBIC(DisasContext *ctx, arg_VBIC *a);
typedef arg_2op arg_VORR;
static bool trans_VORR(DisasContext *ctx, arg_VORR *a);
typedef arg_2op arg_VORN;
static bool trans_VORN(DisasContext *ctx, arg_VORN *a);
typedef arg_2op arg_VEOR;
static bool trans_VEOR(DisasContext *ctx, arg_VEOR *a);
typedef arg_2op arg_VADD;
static bool trans_VADD(DisasContext *ctx, arg_VADD *a);
typedef arg_2op arg_VSUB;
static bool trans_VSUB(DisasContext *ctx, arg_VSUB *a);
typedef arg_2op arg_VMUL;
static bool trans_VMUL(DisasContext *ctx, arg_VMUL *a);
typedef arg_2shift arg_VSHLL_BS;
static bool trans_VSHLL_BS(DisasContext *ctx, arg_VSHLL_BS *a);
typedef arg_2op arg_VMULH_S;
static bool trans_VMULH_S(DisasContext *ctx, arg_VMULH_S *a);
typedef arg_2shift arg_VSHLL_BU;
static bool trans_VSHLL_BU(DisasContext *ctx, arg_VSHLL_BU *a);
typedef arg_2op arg_VMULH_U;
static bool trans_VMULH_U(DisasContext *ctx, arg_VMULH_U *a);
typedef arg_2shift arg_VSHLL_TS;
static bool trans_VSHLL_TS(DisasContext *ctx, arg_VSHLL_TS *a);
typedef arg_2op arg_VRMULH_S;
static bool trans_VRMULH_S(DisasContext *ctx, arg_VRMULH_S *a);
typedef arg_2shift arg_VSHLL_TU;
static bool trans_VSHLL_TU(DisasContext *ctx, arg_VSHLL_TU *a);
typedef arg_2op arg_VRMULH_U;
static bool trans_VRMULH_U(DisasContext *ctx, arg_VRMULH_U *a);
typedef arg_2op arg_VMAX_S;
static bool trans_VMAX_S(DisasContext *ctx, arg_VMAX_S *a);
typedef arg_2op arg_VMAX_U;
static bool trans_VMAX_U(DisasContext *ctx, arg_VMAX_U *a);
typedef arg_2op arg_VMIN_S;
static bool trans_VMIN_S(DisasContext *ctx, arg_VMIN_S *a);
typedef arg_2op arg_VMIN_U;
static bool trans_VMIN_U(DisasContext *ctx, arg_VMIN_U *a);
typedef arg_2op arg_VABD_S;
static bool trans_VABD_S(DisasContext *ctx, arg_VABD_S *a);
typedef arg_2op arg_VABD_U;
static bool trans_VABD_U(DisasContext *ctx, arg_VABD_U *a);
typedef arg_2op arg_VHADD_S;
static bool trans_VHADD_S(DisasContext *ctx, arg_VHADD_S *a);
typedef arg_2op arg_VHADD_U;
static bool trans_VHADD_U(DisasContext *ctx, arg_VHADD_U *a);
typedef arg_2op arg_VHSUB_S;
static bool trans_VHSUB_S(DisasContext *ctx, arg_VHSUB_S *a);
typedef arg_2op arg_VHSUB_U;
static bool trans_VHSUB_U(DisasContext *ctx, arg_VHSUB_U *a);
typedef arg_2op arg_VMULL_BS;
static bool trans_VMULL_BS(DisasContext *ctx, arg_VMULL_BS *a);
typedef arg_2op arg_VMULL_BU;
static bool trans_VMULL_BU(DisasContext *ctx, arg_VMULL_BU *a);
typedef arg_2op arg_VMULL_TS;
static bool trans_VMULL_TS(DisasContext *ctx, arg_VMULL_TS *a);
typedef arg_2op arg_VMULL_TU;
static bool trans_VMULL_TU(DisasContext *ctx, arg_VMULL_TU *a);
typedef arg_2op arg_VQDMULH;
static bool trans_VQDMULH(DisasContext *ctx, arg_VQDMULH *a);
typedef arg_2op arg_VQRDMULH;
static bool trans_VQRDMULH(DisasContext *ctx, arg_VQRDMULH *a);
typedef arg_2op arg_VQADD_S;
static bool trans_VQADD_S(DisasContext *ctx, arg_VQADD_S *a);
typedef arg_2op arg_VQADD_U;
static bool trans_VQADD_U(DisasContext *ctx, arg_VQADD_U *a);
typedef arg_2op arg_VQSUB_S;
static bool trans_VQSUB_S(DisasContext *ctx, arg_VQSUB_S *a);
typedef arg_2op arg_VQSUB_U;
static bool trans_VQSUB_U(DisasContext *ctx, arg_VQSUB_U *a);
typedef arg_2op arg_VSHL_S;
static bool trans_VSHL_S(DisasContext *ctx, arg_VSHL_S *a);
typedef arg_2op arg_VSHL_U;
static bool trans_VSHL_U(DisasContext *ctx, arg_VSHL_U *a);
typedef arg_2op arg_VRSHL_S;
static bool trans_VRSHL_S(DisasContext *ctx, arg_VRSHL_S *a);
typedef arg_2op arg_VRSHL_U;
static bool trans_VRSHL_U(DisasContext *ctx, arg_VRSHL_U *a);
typedef arg_2op arg_VQSHL_S;
static bool trans_VQSHL_S(DisasContext *ctx, arg_VQSHL_S *a);
typedef arg_2op arg_VQSHL_U;
static bool trans_VQSHL_U(DisasContext *ctx, arg_VQSHL_U *a);
typedef arg_2op arg_VQRSHL_S;
static bool trans_VQRSHL_S(DisasContext *ctx, arg_VQRSHL_S *a);
typedef arg_2op arg_VQRSHL_U;
static bool trans_VQRSHL_U(DisasContext *ctx, arg_VQRSHL_U *a);
typedef arg_2op arg_VQDMLADH;
static bool trans_VQDMLADH(DisasContext *ctx, arg_VQDMLADH *a);
typedef arg_2op arg_VQDMLADHX;
static bool trans_VQDMLADHX(DisasContext *ctx, arg_VQDMLADHX *a);
typedef arg_2op arg_VQRDMLADH;
static bool trans_VQRDMLADH(DisasContext *ctx, arg_VQRDMLADH *a);
typedef arg_2op arg_VQRDMLADHX;
static bool trans_VQRDMLADHX(DisasContext *ctx, arg_VQRDMLADHX *a);
typedef arg_2op arg_VQDMLSDH;
static bool trans_VQDMLSDH(DisasContext *ctx, arg_VQDMLSDH *a);
typedef arg_2op arg_VQDMLSDHX;
static bool trans_VQDMLSDHX(DisasContext *ctx, arg_VQDMLSDHX *a);
typedef arg_2op arg_VQRDMLSDH;
static bool trans_VQRDMLSDH(DisasContext *ctx, arg_VQRDMLSDH *a);
typedef arg_2op arg_VQRDMLSDHX;
static bool trans_VQRDMLSDHX(DisasContext *ctx, arg_VQRDMLSDHX *a);
typedef arg_2op arg_VQDMULLB;
static bool trans_VQDMULLB(DisasContext *ctx, arg_VQDMULLB *a);
typedef arg_2op arg_VQDMULLT;
static bool trans_VQDMULLT(DisasContext *ctx, arg_VQDMULLT *a);
typedef arg_2op arg_VRHADD_S;
static bool trans_VRHADD_S(DisasContext *ctx, arg_VRHADD_S *a);
typedef arg_2op arg_VRHADD_U;
static bool trans_VRHADD_U(DisasContext *ctx, arg_VRHADD_U *a);
typedef arg_2op arg_VADC;
static bool trans_VADC(DisasContext *ctx, arg_VADC *a);
typedef arg_2op arg_VADCI;
static bool trans_VADCI(DisasContext *ctx, arg_VADCI *a);
typedef arg_2op arg_VHCADD90;
static bool trans_VHCADD90(DisasContext *ctx, arg_VHCADD90 *a);
typedef arg_2op arg_VHCADD270;
static bool trans_VHCADD270(DisasContext *ctx, arg_VHCADD270 *a);
typedef arg_2op arg_VSBC;
static bool trans_VSBC(DisasContext *ctx, arg_VSBC *a);
typedef arg_2op arg_VSBCI;
static bool trans_VSBCI(DisasContext *ctx, arg_VSBCI *a);
typedef arg_2op arg_VCADD90;
static bool trans_VCADD90(DisasContext *ctx, arg_VCADD90 *a);
typedef arg_2op arg_VCADD270;
static bool trans_VCADD270(DisasContext *ctx, arg_VCADD270 *a);
typedef arg_1op arg_VCLS;
static bool trans_VCLS(DisasContext *ctx, arg_VCLS *a);
typedef arg_1op arg_VCLZ;
static bool trans_VCLZ(DisasContext *ctx, arg_VCLZ *a);
typedef arg_1op arg_VREV16;
static bool trans_VREV16(DisasContext *ctx, arg_VREV16 *a);
typedef arg_1op arg_VREV32;
static bool trans_VREV32(DisasContext *ctx, arg_VREV32 *a);
typedef arg_1op arg_VREV64;
static bool trans_VREV64(DisasContext *ctx, arg_VREV64 *a);
typedef arg_1op arg_VMVN;
static bool trans_VMVN(DisasContext *ctx, arg_VMVN *a);
typedef arg_1op arg_VABS;
static bool trans_VABS(DisasContext *ctx, arg_VABS *a);
typedef arg_1op arg_VABS_fp;
static bool trans_VABS_fp(DisasContext *ctx, arg_VABS_fp *a);
typedef arg_1op arg_VNEG;
static bool trans_VNEG(DisasContext *ctx, arg_VNEG *a);
typedef arg_1op arg_VNEG_fp;
static bool trans_VNEG_fp(DisasContext *ctx, arg_VNEG_fp *a);
typedef arg_vdup arg_VDUP;
static bool trans_VDUP(DisasContext *ctx, arg_VDUP *a);
typedef arg_vmlaldav arg_VMLALDAV_S;
static bool trans_VMLALDAV_S(DisasContext *ctx, arg_VMLALDAV_S *a);
typedef arg_vmlaldav arg_VMLALDAV_U;
static bool trans_VMLALDAV_U(DisasContext *ctx, arg_VMLALDAV_U *a);
typedef arg_vmlaldav arg_VMLSLDAV;
static bool trans_VMLSLDAV(DisasContext *ctx, arg_VMLSLDAV *a);
typedef arg_vmlaldav arg_VRMLALDAVH_S;
static bool trans_VRMLALDAVH_S(DisasContext *ctx, arg_VRMLALDAVH_S *a);
typedef arg_vmlaldav arg_VRMLALDAVH_U;
static bool trans_VRMLALDAVH_U(DisasContext *ctx, arg_VRMLALDAVH_U *a);
typedef arg_vmlaldav arg_VRMLSLDAVH;
static bool trans_VRMLSLDAVH(DisasContext *ctx, arg_VRMLSLDAVH *a);
typedef arg_2scalar arg_VADD_scalar;
static bool trans_VADD_scalar(DisasContext *ctx, arg_VADD_scalar *a);
typedef arg_2scalar arg_VSUB_scalar;
static bool trans_VSUB_scalar(DisasContext *ctx, arg_VSUB_scalar *a);
typedef arg_2scalar arg_VMUL_scalar;
static bool trans_VMUL_scalar(DisasContext *ctx, arg_VMUL_scalar *a);
typedef arg_2scalar arg_VHADD_S_scalar;
static bool trans_VHADD_S_scalar(DisasContext *ctx, arg_VHADD_S_scalar *a);
typedef arg_2scalar arg_VHADD_U_scalar;
static bool trans_VHADD_U_scalar(DisasContext *ctx, arg_VHADD_U_scalar *a);
typedef arg_2scalar arg_VHSUB_S_scalar;
static bool trans_VHSUB_S_scalar(DisasContext *ctx, arg_VHSUB_S_scalar *a);
typedef arg_2scalar arg_VHSUB_U_scalar;
static bool trans_VHSUB_U_scalar(DisasContext *ctx, arg_VHSUB_U_scalar *a);
typedef arg_2scalar arg_VQADD_S_scalar;
static bool trans_VQADD_S_scalar(DisasContext *ctx, arg_VQADD_S_scalar *a);
typedef arg_2scalar arg_VQADD_U_scalar;
static bool trans_VQADD_U_scalar(DisasContext *ctx, arg_VQADD_U_scalar *a);
typedef arg_2scalar arg_VQDMULLB_scalar;
static bool trans_VQDMULLB_scalar(DisasContext *ctx, arg_VQDMULLB_scalar *a);
typedef arg_2scalar arg_VQSUB_S_scalar;
static bool trans_VQSUB_S_scalar(DisasContext *ctx, arg_VQSUB_S_scalar *a);
typedef arg_2scalar arg_VQSUB_U_scalar;
static bool trans_VQSUB_U_scalar(DisasContext *ctx, arg_VQSUB_U_scalar *a);
typedef arg_2scalar arg_VQDMULLT_scalar;
static bool trans_VQDMULLT_scalar(DisasContext *ctx, arg_VQDMULLT_scalar *a);
typedef arg_2scalar arg_VBRSR;
static bool trans_VBRSR(DisasContext *ctx, arg_VBRSR *a);
typedef arg_2scalar arg_VQDMULH_scalar;
static bool trans_VQDMULH_scalar(DisasContext *ctx, arg_VQDMULH_scalar *a);
typedef arg_2scalar arg_VQRDMULH_scalar;
static bool trans_VQRDMULH_scalar(DisasContext *ctx, arg_VQRDMULH_scalar *a);
typedef arg_disas_mve8 arg_VADDV;
static bool trans_VADDV(DisasContext *ctx, arg_VADDV *a);
typedef arg_disas_mve9 arg_VADDLV;
static bool trans_VADDLV(DisasContext *ctx, arg_VADDLV *a);
typedef arg_disas_mve10 arg_VPST;
static bool trans_VPST(DisasContext *ctx, arg_VPST *a);
typedef arg_1imm arg_Vimm_1r;
static bool trans_Vimm_1r(DisasContext *ctx, arg_Vimm_1r *a);
typedef arg_2shift arg_VSHLI;
static bool trans_VSHLI(DisasContext *ctx, arg_VSHLI *a);
typedef arg_2shift arg_VQSHLI_S;
static bool trans_VQSHLI_S(DisasContext *ctx, arg_VQSHLI_S *a);
typedef arg_2shift arg_VQSHLI_U;
static bool trans_VQSHLI_U(DisasContext *ctx, arg_VQSHLI_U *a);
typedef arg_2shift arg_VQSHLUI;
static bool trans_VQSHLUI(DisasContext *ctx, arg_VQSHLUI *a);
typedef arg_2shift arg_VSHRI_S;
static bool trans_VSHRI_S(DisasContext *ctx, arg_VSHRI_S *a);
typedef arg_2shift arg_VSHRI_U;
static bool trans_VSHRI_U(DisasContext *ctx, arg_VSHRI_U *a);
typedef arg_2shift arg_VRSHRI_S;
static bool trans_VRSHRI_S(DisasContext *ctx, arg_VRSHRI_S *a);
typedef arg_2shift arg_VRSHRI_U;
static bool trans_VRSHRI_U(DisasContext *ctx, arg_VRSHRI_U *a);
typedef arg_2shift arg_VSRI;
static bool trans_VSRI(DisasContext *ctx, arg_VSRI *a);
typedef arg_2shift arg_VSLI;
static bool trans_VSLI(DisasContext *ctx, arg_VSLI *a);
typedef arg_2shift arg_VSHRNB;
static bool trans_VSHRNB(DisasContext *ctx, arg_VSHRNB *a);
typedef arg_2shift arg_VSHRNT;
static bool trans_VSHRNT(DisasContext *ctx, arg_VSHRNT *a);
typedef arg_2shift arg_VRSHRNB;
static bool trans_VRSHRNB(DisasContext *ctx, arg_VRSHRNB *a);
typedef arg_2shift arg_VRSHRNT;
static bool trans_VRSHRNT(DisasContext *ctx, arg_VRSHRNT *a);
typedef arg_2shift arg_VQSHRNB_S;
static bool trans_VQSHRNB_S(DisasContext *ctx, arg_VQSHRNB_S *a);
typedef arg_2shift arg_VQSHRNT_S;
static bool trans_VQSHRNT_S(DisasContext *ctx, arg_VQSHRNT_S *a);
typedef arg_2shift arg_VQSHRNB_U;
static bool trans_VQSHRNB_U(DisasContext *ctx, arg_VQSHRNB_U *a);
typedef arg_2shift arg_VQSHRNT_U;
static bool trans_VQSHRNT_U(DisasContext *ctx, arg_VQSHRNT_U *a);
typedef arg_2shift arg_VQSHRUNB;
static bool trans_VQSHRUNB(DisasContext *ctx, arg_VQSHRUNB *a);
typedef arg_2shift arg_VQSHRUNT;
static bool trans_VQSHRUNT(DisasContext *ctx, arg_VQSHRUNT *a);
typedef arg_2shift arg_VQRSHRNB_S;
static bool trans_VQRSHRNB_S(DisasContext *ctx, arg_VQRSHRNB_S *a);
typedef arg_2shift arg_VQRSHRNT_S;
static bool trans_VQRSHRNT_S(DisasContext *ctx, arg_VQRSHRNT_S *a);
typedef arg_2shift arg_VQRSHRNB_U;
static bool trans_VQRSHRNB_U(DisasContext *ctx, arg_VQRSHRNB_U *a);
typedef arg_2shift arg_VQRSHRNT_U;
static bool trans_VQRSHRNT_U(DisasContext *ctx, arg_VQRSHRNT_U *a);
typedef arg_2shift arg_VQRSHRUNB;
static bool trans_VQRSHRUNB(DisasContext *ctx, arg_VQRSHRUNB *a);
typedef arg_2shift arg_VQRSHRUNT;
static bool trans_VQRSHRUNT(DisasContext *ctx, arg_VQRSHRUNT *a);
typedef arg_disas_mve11 arg_VSHLC;
static bool trans_VSHLC(DisasContext *ctx, arg_VSHLC *a);

static void disas_mve_extract_1imm(DisasContext *ctx, arg_1imm *a, uint32_t insn)
{
    a->cmode = extract32(insn, 8, 4);
    a->op = extract32(insn, 5, 1);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->imm = deposit32(deposit32(extract32(insn, 0, 4), 4, 28, extract32(insn, 16, 3)), 7, 25, extract32(insn, 28, 1));
}

static void disas_mve_extract_1op(DisasContext *ctx, arg_1op *a, uint32_t insn)
{
    a->size = extract32(insn, 18, 2);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
}

static void disas_mve_extract_1op_nosz(DisasContext *ctx, arg_1op *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 0;
}

static void disas_mve_extract_2_shl_b(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->shift = extract32(insn, 16, 3);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 0;
}

static void disas_mve_extract_2_shl_h(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->shift = extract32(insn, 16, 4);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 1;
}

static void disas_mve_extract_2_shl_w(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->shift = extract32(insn, 16, 5);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 2;
}

static void disas_mve_extract_2_shll_b(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->shift = extract32(insn, 16, 3);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 0;
}

static void disas_mve_extract_2_shll_esize_b(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 0;
    a->shift = 8;
}

static void disas_mve_extract_2_shll_esize_h(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 1;
    a->shift = 16;
}

static void disas_mve_extract_2_shll_h(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->shift = extract32(insn, 16, 4);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 1;
}

static void disas_mve_extract_2_shr_b(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 0;
    a->shift = rsub_8(ctx, extract32(insn, 16, 3));
}

static void disas_mve_extract_2_shr_h(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 1;
    a->shift = rsub_16(ctx, extract32(insn, 16, 4));
}

static void disas_mve_extract_2_shr_w(DisasContext *ctx, arg_2shift *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->size = 2;
    a->shift = rsub_32(ctx, extract32(insn, 16, 5));
}

static void disas_mve_extract_2op(DisasContext *ctx, arg_2op *a, uint32_t insn)
{
    a->size = extract32(insn, 20, 2);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->qn = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
}

static void disas_mve_extract_2op_nosz(DisasContext *ctx, arg_2op *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->qn = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
    a->size = 0;
}

static void disas_mve_extract_2op_rev(DisasContext *ctx, arg_2op *a, uint32_t insn)
{
    a->size = extract32(insn, 20, 2);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
    a->qn = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
}

static void disas_mve_extract_2op_sz28(DisasContext *ctx, arg_2op *a, uint32_t insn)
{
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qm = deposit32(extract32(insn, 1, 3), 3, 29, extract32(insn, 5, 1));
    a->qn = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
    a->size = plus_1(ctx, extract32(insn, 28, 1));
}

static void disas_mve_extract_2scalar(DisasContext *ctx, arg_2scalar *a, uint32_t insn)
{
    a->size = extract32(insn, 20, 2);
    a->rm = extract32(insn, 0, 4);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qn = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
}

static void disas_mve_extract_2scalar_nosz(DisasContext *ctx, arg_2scalar *a, uint32_t insn)
{
    a->rm = extract32(insn, 0, 4);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->qn = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
}

static void disas_mve_extract_disas_mve_Fmt_24(DisasContext *ctx, arg_disas_mve8 *a, uint32_t insn)
{
    a->u = extract32(insn, 28, 1);
    a->size = extract32(insn, 18, 2);
    a->a = extract32(insn, 5, 1);
    a->qm = extract32(insn, 1, 3);
    a->rda = times_2(ctx, extract32(insn, 13, 3));
}

static void disas_mve_extract_disas_mve_Fmt_25(DisasContext *ctx, arg_disas_mve9 *a, uint32_t insn)
{
    a->u = extract32(insn, 28, 1);
    a->a = extract32(insn, 5, 1);
    a->qm = extract32(insn, 1, 3);
    a->rdahi = times_2_plus_1(ctx, extract32(insn, 20, 3));
    a->rdalo = times_2(ctx, extract32(insn, 13, 3));
}

static void disas_mve_extract_disas_mve_Fmt_26(DisasContext *ctx, arg_disas_mve10 *a, uint32_t insn)
{
    a->mask = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
}

static void disas_mve_extract_disas_mve_Fmt_27(DisasContext *ctx, arg_disas_mve11 *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 5);
    a->rdm = extract32(insn, 0, 4);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
}

static void disas_mve_extract_vdup(DisasContext *ctx, arg_vdup *a, uint32_t insn)
{
    a->rt = extract32(insn, 12, 4);
    a->qd = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
}

static void disas_mve_extract_vldr_vstr(DisasContext *ctx, arg_vldr_vstr *a, uint32_t insn)
{
    a->l = extract32(insn, 20, 1);
    a->rn = extract32(insn, 16, 4);
    a->imm = extract32(insn, 0, 7);
    a->qd = deposit32(extract32(insn, 13, 3), 3, 29, extract32(insn, 22, 1));
    a->u = 0;
}

static void disas_mve_extract_vldst_wn(DisasContext *ctx, arg_vldr_vstr *a, uint32_t insn)
{
    a->u = extract32(insn, 28, 1);
    a->l = extract32(insn, 20, 1);
    a->rn = extract32(insn, 16, 3);
    a->qd = extract32(insn, 13, 3);
    a->imm = extract32(insn, 0, 7);
}

static void disas_mve_extract_vmlaldav(DisasContext *ctx, arg_vmlaldav *a, uint32_t insn)
{
    a->qm = extract32(insn, 1, 3);
    a->qn = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
    a->rdahi = times_2_plus_1(ctx, extract32(insn, 20, 3));
    a->rdalo = times_2(ctx, extract32(insn, 13, 3));
    a->size = plus_1(ctx, extract32(insn, 16, 1));
}

static void disas_mve_extract_vmlaldav_nosz(DisasContext *ctx, arg_vmlaldav *a, uint32_t insn)
{
    a->qm = extract32(insn, 1, 3);
    a->qn = deposit32(extract32(insn, 17, 3), 3, 29, extract32(insn, 7, 1));
    a->rdahi = times_2_plus_1(ctx, extract32(insn, 20, 3));
    a->rdalo = times_2(ctx, extract32(insn, 13, 3));
    a->size = 0;
}

bool disas_mve(DisasContext *ctx, uint32_t insn)
{
    union {
        arg_1imm f_1imm;
        arg_1op f_1op;
        arg_2op f_2op;
        arg_2scalar f_2scalar;
        arg_2shift f_2shift;
        arg_disas_mve10 f_disas_mve10;
        arg_disas_mve11 f_disas_mve11;
        arg_disas_mve8 f_disas_mve8;
        arg_disas_mve9 f_disas_mve9;
        arg_vdup f_vdup;
        arg_vldr_vstr f_vldr_vstr;
        arg_vmlaldav f_vmlaldav;
    } u;

    switch (insn & 0xef000000u) {
    case 0xec000000u:
        /* 111.1100 ........ ........ ........ */
        switch (insn & 0x00201f80) {
        case 0x00200e80:
            /* 111.1100 ..1..... ...01110 1....... */
            disas_mve_extract_vldst_wn(ctx, &u.f_vldr_vstr, insn);
            switch (insn & 0x00480000) {
            case 0x00000000:
                /* 111.1100 .01.0... ...01110 1....... */
                /* ../target/arm/mve.decode:95 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.p = 0;
                u.f_vldr_vstr.w = 1;
                u.f_vldr_vstr.size = 1;
                if (trans_VLDSTB_H(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x00200f00:
            /* 111.1100 ..1..... ...01111 0....... */
            disas_mve_extract_vldst_wn(ctx, &u.f_vldr_vstr, insn);
            switch (insn & 0x00480000) {
            case 0x00000000:
                /* 111.1100 .01.0... ...01111 0....... */
                /* ../target/arm/mve.decode:99 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.p = 0;
                u.f_vldr_vstr.w = 1;
                u.f_vldr_vstr.size = 2;
                if (trans_VLDSTB_W(ctx, &u.f_vldr_vstr)) return true;
                break;
            case 0x00080000:
                /* 111.1100 .01.1... ...01111 0....... */
                /* ../target/arm/mve.decode:103 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.p = 0;
                u.f_vldr_vstr.w = 1;
                u.f_vldr_vstr.size = 2;
                if (trans_VLDSTH_W(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x00201e00:
            /* 111.1100 ..1..... ...11110 0....... */
            disas_mve_extract_vldr_vstr(ctx, &u.f_vldr_vstr, insn);
            switch ((insn >> 28) & 0x1) {
            case 0x0:
                /* 11101100 ..1..... ...11110 0....... */
                /* ../target/arm/mve.decode:109 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.size = 0;
                u.f_vldr_vstr.p = 0;
                u.f_vldr_vstr.w = 1;
                if (trans_VLDR_VSTR(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x00201e80:
            /* 111.1100 ..1..... ...11110 1....... */
            disas_mve_extract_vldr_vstr(ctx, &u.f_vldr_vstr, insn);
            switch ((insn >> 28) & 0x1) {
            case 0x0:
                /* 11101100 ..1..... ...11110 1....... */
                /* ../target/arm/mve.decode:111 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.size = 1;
                u.f_vldr_vstr.p = 0;
                u.f_vldr_vstr.w = 1;
                if (trans_VLDR_VSTR(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x00201f00:
            /* 111.1100 ..1..... ...11111 0....... */
            disas_mve_extract_vldr_vstr(ctx, &u.f_vldr_vstr, insn);
            switch ((insn >> 28) & 0x1) {
            case 0x0:
                /* 11101100 ..1..... ...11111 0....... */
                /* ../target/arm/mve.decode:113 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.size = 2;
                u.f_vldr_vstr.p = 0;
                u.f_vldr_vstr.w = 1;
                if (trans_VLDR_VSTR(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        }
        break;
    case 0xed000000u:
        /* 111.1101 ........ ........ ........ */
        switch ((insn >> 7) & 0x3f) {
        case 0x1d:
            /* 111.1101 ........ ...01110 1....... */
            disas_mve_extract_vldst_wn(ctx, &u.f_vldr_vstr, insn);
            switch (insn & 0x00480000) {
            case 0x00000000:
                /* 111.1101 .0..0... ...01110 1....... */
                /* ../target/arm/mve.decode:97 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.w = extract32(insn, 21, 1);
                u.f_vldr_vstr.p = 1;
                u.f_vldr_vstr.size = 1;
                if (trans_VLDSTB_H(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x1e:
            /* 111.1101 ........ ...01111 0....... */
            disas_mve_extract_vldst_wn(ctx, &u.f_vldr_vstr, insn);
            switch (insn & 0x00480000) {
            case 0x00000000:
                /* 111.1101 .0..0... ...01111 0....... */
                /* ../target/arm/mve.decode:101 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.w = extract32(insn, 21, 1);
                u.f_vldr_vstr.p = 1;
                u.f_vldr_vstr.size = 2;
                if (trans_VLDSTB_W(ctx, &u.f_vldr_vstr)) return true;
                break;
            case 0x00080000:
                /* 111.1101 .0..1... ...01111 0....... */
                /* ../target/arm/mve.decode:105 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.w = extract32(insn, 21, 1);
                u.f_vldr_vstr.p = 1;
                u.f_vldr_vstr.size = 2;
                if (trans_VLDSTH_W(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x3c:
            /* 111.1101 ........ ...11110 0....... */
            disas_mve_extract_vldr_vstr(ctx, &u.f_vldr_vstr, insn);
            switch ((insn >> 28) & 0x1) {
            case 0x0:
                /* 11101101 ........ ...11110 0....... */
                /* ../target/arm/mve.decode:115 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.w = extract32(insn, 21, 1);
                u.f_vldr_vstr.size = 0;
                u.f_vldr_vstr.p = 1;
                if (trans_VLDR_VSTR(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x3d:
            /* 111.1101 ........ ...11110 1....... */
            disas_mve_extract_vldr_vstr(ctx, &u.f_vldr_vstr, insn);
            switch ((insn >> 28) & 0x1) {
            case 0x0:
                /* 11101101 ........ ...11110 1....... */
                /* ../target/arm/mve.decode:117 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.w = extract32(insn, 21, 1);
                u.f_vldr_vstr.size = 1;
                u.f_vldr_vstr.p = 1;
                if (trans_VLDR_VSTR(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        case 0x3e:
            /* 111.1101 ........ ...11111 0....... */
            disas_mve_extract_vldr_vstr(ctx, &u.f_vldr_vstr, insn);
            switch ((insn >> 28) & 0x1) {
            case 0x0:
                /* 11101101 ........ ...11111 0....... */
                /* ../target/arm/mve.decode:119 */
                u.f_vldr_vstr.a = extract32(insn, 23, 1);
                u.f_vldr_vstr.w = extract32(insn, 21, 1);
                u.f_vldr_vstr.size = 2;
                u.f_vldr_vstr.p = 1;
                if (trans_VLDR_VSTR(ctx, &u.f_vldr_vstr)) return true;
                break;
            }
            break;
        }
        break;
    case 0xee000000u:
        /* 111.1110 ........ ........ ........ */
        switch (insn & 0x00800f50) {
        case 0x00000e00:
            /* 111.1110 0....... ....1110 .0.0.... */
            switch (insn & 0x10011001) {
            case 0x00000000:
                /* 11101110 0......0 ...01110 .0.0...0 */
                /* ../target/arm/mve.decode:201 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQDMLADH(ctx, &u.f_2op)) return true;
                break;
            case 0x00000001:
                /* 11101110 0......0 ...01110 .0.0...1 */
                /* ../target/arm/mve.decode:203 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQRDMLADH(ctx, &u.f_2op)) return true;
                break;
            case 0x00001000:
                /* 11101110 0......0 ...11110 .0.0...0 */
                /* ../target/arm/mve.decode:202 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQDMLADHX(ctx, &u.f_2op)) return true;
                break;
            case 0x00001001:
                /* 11101110 0......0 ...11110 .0.0...1 */
                /* ../target/arm/mve.decode:204 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQRDMLADHX(ctx, &u.f_2op)) return true;
                break;
            case 0x00010000:
                /* 11101110 0......1 ...01110 .0.0...0 */
                /* ../target/arm/mve.decode:176 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMULL_BS(ctx, &u.f_2op)) return true;
                break;
            case 0x00010001:
                /* 11101110 0......1 ...01110 .0.0...1 */
                if ((insn & 0x003e0080) == 0x00300000) {
                    /* 11101110 0.110001 ...01110 00.0...1 */
                    /* ../target/arm/mve.decode:136 */
                    disas_mve_extract_2_shll_esize_b(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_BS(ctx, &u.f_2shift)) return true;
                }
                if ((insn & 0x003e0080) == 0x00340000) {
                    /* 11101110 0.110101 ...01110 00.0...1 */
                    /* ../target/arm/mve.decode:137 */
                    disas_mve_extract_2_shll_esize_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_BS(ctx, &u.f_2shift)) return true;
                }
                /* ../target/arm/mve.decode:139 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMULH_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00011000:
                /* 11101110 0......1 ...11110 .0.0...0 */
                /* ../target/arm/mve.decode:178 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMULL_TS(ctx, &u.f_2op)) return true;
                break;
            case 0x00011001:
                /* 11101110 0......1 ...11110 .0.0...1 */
                if ((insn & 0x003e0080) == 0x00300000) {
                    /* 11101110 0.110001 ...11110 00.0...1 */
                    /* ../target/arm/mve.decode:150 */
                    disas_mve_extract_2_shll_esize_b(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_TS(ctx, &u.f_2shift)) return true;
                }
                if ((insn & 0x003e0080) == 0x00340000) {
                    /* 11101110 0.110101 ...11110 00.0...1 */
                    /* ../target/arm/mve.decode:151 */
                    disas_mve_extract_2_shll_esize_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_TS(ctx, &u.f_2shift)) return true;
                }
                /* ../target/arm/mve.decode:153 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VRMULH_S(ctx, &u.f_2op)) return true;
                break;
            case 0x10000000:
                /* 11111110 0......0 ...01110 .0.0...0 */
                /* ../target/arm/mve.decode:206 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQDMLSDH(ctx, &u.f_2op)) return true;
                break;
            case 0x10000001:
                /* 11111110 0......0 ...01110 .0.0...1 */
                /* ../target/arm/mve.decode:208 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQRDMLSDH(ctx, &u.f_2op)) return true;
                break;
            case 0x10001000:
                /* 11111110 0......0 ...11110 .0.0...0 */
                /* ../target/arm/mve.decode:207 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQDMLSDHX(ctx, &u.f_2op)) return true;
                break;
            case 0x10001001:
                /* 11111110 0......0 ...11110 .0.0...1 */
                /* ../target/arm/mve.decode:209 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQRDMLSDHX(ctx, &u.f_2op)) return true;
                break;
            case 0x10010000:
                /* 11111110 0......1 ...01110 .0.0...0 */
                /* ../target/arm/mve.decode:177 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMULL_BU(ctx, &u.f_2op)) return true;
                break;
            case 0x10010001:
                /* 11111110 0......1 ...01110 .0.0...1 */
                if ((insn & 0x003e0080) == 0x00300000) {
                    /* 11111110 0.110001 ...01110 00.0...1 */
                    /* ../target/arm/mve.decode:143 */
                    disas_mve_extract_2_shll_esize_b(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_BU(ctx, &u.f_2shift)) return true;
                }
                if ((insn & 0x003e0080) == 0x00340000) {
                    /* 11111110 0.110101 ...01110 00.0...1 */
                    /* ../target/arm/mve.decode:144 */
                    disas_mve_extract_2_shll_esize_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_BU(ctx, &u.f_2shift)) return true;
                }
                /* ../target/arm/mve.decode:146 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMULH_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10011000:
                /* 11111110 0......1 ...11110 .0.0...0 */
                /* ../target/arm/mve.decode:179 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMULL_TU(ctx, &u.f_2op)) return true;
                break;
            case 0x10011001:
                /* 11111110 0......1 ...11110 .0.0...1 */
                if ((insn & 0x003e0080) == 0x00300000) {
                    /* 11111110 0.110001 ...11110 00.0...1 */
                    /* ../target/arm/mve.decode:157 */
                    disas_mve_extract_2_shll_esize_b(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_TU(ctx, &u.f_2shift)) return true;
                }
                if ((insn & 0x003e0080) == 0x00340000) {
                    /* 11111110 0.110101 ...11110 00.0...1 */
                    /* ../target/arm/mve.decode:158 */
                    disas_mve_extract_2_shll_esize_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_TU(ctx, &u.f_2shift)) return true;
                }
                /* ../target/arm/mve.decode:160 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VRMULH_U(ctx, &u.f_2op)) return true;
                break;
            }
            break;
        case 0x00000e40:
            /* 111.1110 0....... ....1110 .1.0.... */
            disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
            switch (insn & 0x10011020) {
            case 0x00010020:
                /* 11101110 0......1 ...01110 .110.... */
                /* ../target/arm/mve.decode:306 */
                if (trans_VQDMULH_scalar(ctx, &u.f_2scalar)) return true;
                break;
            case 0x00011020:
                /* 11101110 0......1 ...11110 .110.... */
                /* ../target/arm/mve.decode:284 */
                if (trans_VMUL_scalar(ctx, &u.f_2scalar)) return true;
                break;
            case 0x10010020:
                /* 11111110 0......1 ...01110 .110.... */
                /* ../target/arm/mve.decode:307 */
                if (trans_VQRDMULH_scalar(ctx, &u.f_2scalar)) return true;
                break;
            case 0x10011020:
                /* 11111110 0......1 ...11110 .110.... */
                /* ../target/arm/mve.decode:304 */
                if (trans_VBRSR(ctx, &u.f_2scalar)) return true;
                break;
            }
            break;
        case 0x00000f00:
            /* 111.1110 0....... ....1111 .0.0.... */
            switch (insn & 0x00010001) {
            case 0x00000000:
                /* 111.1110 0......0 ....1111 .0.0...0 */
                switch ((insn >> 28) & 0x1) {
                case 0x0:
                    /* 11101110 0......0 ....1111 .0.0...0 */
                    if ((insn & 0x00301000) == 0x00300000) {
                        /* 11101110 0.11...0 ...01111 .0.0...0 */
                        /* ../target/arm/mve.decode:218 */
                        disas_mve_extract_2op_nosz(ctx, &u.f_2op, insn);
                        if (trans_VADC(ctx, &u.f_2op)) return true;
                    }
                    if ((insn & 0x00301000) == 0x00301000) {
                        /* 11101110 0.11...0 ...11111 .0.0...0 */
                        /* ../target/arm/mve.decode:219 */
                        disas_mve_extract_2op_nosz(ctx, &u.f_2op, insn);
                        if (trans_VADCI(ctx, &u.f_2op)) return true;
                    }
                    if ((insn & 0x00001000) == 0x00000000) {
                        /* 11101110 0......0 ...01111 .0.0...0 */
                        /* ../target/arm/mve.decode:220 */
                        disas_mve_extract_2op(ctx, &u.f_2op, insn);
                        if (trans_VHCADD90(ctx, &u.f_2op)) return true;
                    }
                    if ((insn & 0x00001000) == 0x00001000) {
                        /* 11101110 0......0 ...11111 .0.0...0 */
                        /* ../target/arm/mve.decode:221 */
                        disas_mve_extract_2op(ctx, &u.f_2op, insn);
                        if (trans_VHCADD270(ctx, &u.f_2op)) return true;
                    }
                    break;
                case 0x1:
                    /* 11111110 0......0 ....1111 .0.0...0 */
                    if ((insn & 0x00301000) == 0x00300000) {
                        /* 11111110 0.11...0 ...01111 .0.0...0 */
                        /* ../target/arm/mve.decode:225 */
                        disas_mve_extract_2op_nosz(ctx, &u.f_2op, insn);
                        if (trans_VSBC(ctx, &u.f_2op)) return true;
                    }
                    if ((insn & 0x00301000) == 0x00301000) {
                        /* 11111110 0.11...0 ...11111 .0.0...0 */
                        /* ../target/arm/mve.decode:226 */
                        disas_mve_extract_2op_nosz(ctx, &u.f_2op, insn);
                        if (trans_VSBCI(ctx, &u.f_2op)) return true;
                    }
                    if ((insn & 0x00001000) == 0x00000000) {
                        /* 11111110 0......0 ...01111 .0.0...0 */
                        /* ../target/arm/mve.decode:227 */
                        disas_mve_extract_2op(ctx, &u.f_2op, insn);
                        if (trans_VCADD90(ctx, &u.f_2op)) return true;
                    }
                    if ((insn & 0x00001000) == 0x00001000) {
                        /* 11111110 0......0 ...11111 .0.0...0 */
                        /* ../target/arm/mve.decode:228 */
                        disas_mve_extract_2op(ctx, &u.f_2op, insn);
                        if (trans_VCADD270(ctx, &u.f_2op)) return true;
                    }
                    break;
                }
                break;
            case 0x00000001:
                /* 111.1110 0......0 ....1111 .0.0...1 */
                disas_mve_extract_2op_sz28(ctx, &u.f_2op, insn);
                switch (insn & 0x00301000) {
                case 0x00300000:
                    /* 111.1110 0.11...0 ...01111 .0.0...1 */
                    /* ../target/arm/mve.decode:211 */
                    if (trans_VQDMULLB(ctx, &u.f_2op)) return true;
                    break;
                case 0x00301000:
                    /* 111.1110 0.11...0 ...11111 .0.0...1 */
                    /* ../target/arm/mve.decode:212 */
                    if (trans_VQDMULLT(ctx, &u.f_2op)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x00000f40:
            /* 111.1110 0....... ....1111 .1.0.... */
            switch (insn & 0x00011020) {
            case 0x00000000:
                /* 111.1110 0......0 ...01111 .100.... */
                disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                switch ((insn >> 28) & 0x1) {
                case 0x0:
                    /* 11101110 0......0 ...01111 .100.... */
                    /* ../target/arm/mve.decode:285 */
                    if (trans_VHADD_S_scalar(ctx, &u.f_2scalar)) return true;
                    break;
                case 0x1:
                    /* 11111110 0......0 ...01111 .100.... */
                    /* ../target/arm/mve.decode:286 */
                    if (trans_VHADD_U_scalar(ctx, &u.f_2scalar)) return true;
                    break;
                }
                break;
            case 0x00000020:
                /* 111.1110 0......0 ...01111 .110.... */
                if ((insn & 0x10000000) == 0x00000000) {
                    /* 11101110 0......0 ...01111 .110.... */
                    /* ../target/arm/mve.decode:291 */
                    disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                    if (trans_VQADD_S_scalar(ctx, &u.f_2scalar)) return true;
                }
                if ((insn & 0x10000000) == 0x10000000) {
                    /* 11111110 0......0 ...01111 .110.... */
                    /* ../target/arm/mve.decode:292 */
                    disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                    if (trans_VQADD_U_scalar(ctx, &u.f_2scalar)) return true;
                }
                if ((insn & 0x00300000) == 0x00300000) {
                    /* 111.1110 0.11...0 ...01111 .110.... */
                    /* ../target/arm/mve.decode:293 */
                    disas_mve_extract_2scalar_nosz(ctx, &u.f_2scalar, insn);
                    u.f_2scalar.size = plus_1(ctx, extract32(insn, 28, 1));
                    if (trans_VQDMULLB_scalar(ctx, &u.f_2scalar)) return true;
                }
                break;
            case 0x00001000:
                /* 111.1110 0......0 ...11111 .100.... */
                disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                switch ((insn >> 28) & 0x1) {
                case 0x0:
                    /* 11101110 0......0 ...11111 .100.... */
                    /* ../target/arm/mve.decode:287 */
                    if (trans_VHSUB_S_scalar(ctx, &u.f_2scalar)) return true;
                    break;
                case 0x1:
                    /* 11111110 0......0 ...11111 .100.... */
                    /* ../target/arm/mve.decode:288 */
                    if (trans_VHSUB_U_scalar(ctx, &u.f_2scalar)) return true;
                    break;
                }
                break;
            case 0x00001020:
                /* 111.1110 0......0 ...11111 .110.... */
                if ((insn & 0x10000000) == 0x00000000) {
                    /* 11101110 0......0 ...11111 .110.... */
                    /* ../target/arm/mve.decode:298 */
                    disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                    if (trans_VQSUB_S_scalar(ctx, &u.f_2scalar)) return true;
                }
                if ((insn & 0x10000000) == 0x10000000) {
                    /* 11111110 0......0 ...11111 .110.... */
                    /* ../target/arm/mve.decode:299 */
                    disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                    if (trans_VQSUB_U_scalar(ctx, &u.f_2scalar)) return true;
                }
                if ((insn & 0x00300000) == 0x00300000) {
                    /* 111.1110 0.11...0 ...11111 .110.... */
                    /* ../target/arm/mve.decode:300 */
                    disas_mve_extract_2scalar_nosz(ctx, &u.f_2scalar, insn);
                    u.f_2scalar.size = plus_1(ctx, extract32(insn, 28, 1));
                    if (trans_VQDMULLT_scalar(ctx, &u.f_2scalar)) return true;
                }
                break;
            case 0x00010000:
                /* 111.1110 0......1 ...01111 .100.... */
                switch ((insn >> 28) & 0x1) {
                case 0x0:
                    /* 11101110 0......1 ...01111 .100.... */
                    /* ../target/arm/mve.decode:282 */
                    disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                    if (trans_VADD_scalar(ctx, &u.f_2scalar)) return true;
                    break;
                case 0x1:
                    /* 11111110 0......1 ...01111 .100.... */
                    disas_mve_extract_disas_mve_Fmt_26(ctx, &u.f_disas_mve10, insn);
                    switch (insn & 0x003e008f) {
                    case 0x0030000d:
                        /* 11111110 0.110001 ...01111 01001101 */
                        /* ../target/arm/mve.decode:318 */
                        if (trans_VPST(ctx, &u.f_disas_mve10)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00011000:
                /* 111.1110 0......1 ...11111 .100.... */
                disas_mve_extract_2scalar(ctx, &u.f_2scalar, insn);
                switch ((insn >> 28) & 0x1) {
                case 0x0:
                    /* 11101110 0......1 ...11111 .100.... */
                    /* ../target/arm/mve.decode:283 */
                    if (trans_VSUB_scalar(ctx, &u.f_2scalar)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x00800b10:
            /* 111.1110 1....... ....1011 .0.1.... */
            disas_mve_extract_vdup(ctx, &u.f_vdup, insn);
            switch (insn & 0x1071002f) {
            case 0x00200000:
                /* 11101110 1010...0 ....1011 .0010000 */
                /* ../target/arm/mve.decode:254 */
                u.f_vdup.size = 2;
                if (trans_VDUP(ctx, &u.f_vdup)) return true;
                break;
            case 0x00200020:
                /* 11101110 1010...0 ....1011 .0110000 */
                /* ../target/arm/mve.decode:253 */
                u.f_vdup.size = 1;
                if (trans_VDUP(ctx, &u.f_vdup)) return true;
                break;
            case 0x00600000:
                /* 11101110 1110...0 ....1011 .0010000 */
                /* ../target/arm/mve.decode:252 */
                u.f_vdup.size = 0;
                if (trans_VDUP(ctx, &u.f_vdup)) return true;
                break;
            }
            break;
        case 0x00800e00:
            /* 111.1110 1....... ....1110 .0.0.... */
            switch (insn & 0x10000001) {
            case 0x00000000:
                /* 11101110 1....... ....1110 .0.0...0 */
                /* ../target/arm/mve.decode:270 */
                disas_mve_extract_vmlaldav(ctx, &u.f_vmlaldav, insn);
                u.f_vmlaldav.x = extract32(insn, 12, 1);
                u.f_vmlaldav.a = extract32(insn, 5, 1);
                if (trans_VMLALDAV_S(ctx, &u.f_vmlaldav)) return true;
                break;
            case 0x00000001:
                /* 11101110 1....... ....1110 .0.0...1 */
                /* ../target/arm/mve.decode:273 */
                disas_mve_extract_vmlaldav(ctx, &u.f_vmlaldav, insn);
                u.f_vmlaldav.x = extract32(insn, 12, 1);
                u.f_vmlaldav.a = extract32(insn, 5, 1);
                if (trans_VMLSLDAV(ctx, &u.f_vmlaldav)) return true;
                break;
            case 0x10000000:
                /* 11111110 1....... ....1110 .0.0...0 */
                /* ../target/arm/mve.decode:271 */
                disas_mve_extract_vmlaldav(ctx, &u.f_vmlaldav, insn);
                u.f_vmlaldav.x = extract32(insn, 12, 1);
                u.f_vmlaldav.a = extract32(insn, 5, 1);
                if (trans_VMLALDAV_U(ctx, &u.f_vmlaldav)) return true;
                break;
            case 0x10000001:
                /* 11111110 1....... ....1110 .0.0...1 */
                disas_mve_extract_vmlaldav_nosz(ctx, &u.f_vmlaldav, insn);
                switch ((insn >> 16) & 0x1) {
                case 0x0:
                    /* 11111110 1......0 ....1110 .0.0...1 */
                    /* ../target/arm/mve.decode:278 */
                    u.f_vmlaldav.x = extract32(insn, 12, 1);
                    u.f_vmlaldav.a = extract32(insn, 5, 1);
                    if (trans_VRMLSLDAVH(ctx, &u.f_vmlaldav)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x00800f00:
            /* 111.1110 1....... ....1111 .0.0.... */
            switch (insn & 0x00010001) {
            case 0x00000000:
                /* 111.1110 1......0 ....1111 .0.0...0 */
                disas_mve_extract_vmlaldav_nosz(ctx, &u.f_vmlaldav, insn);
                switch ((insn >> 28) & 0x1) {
                case 0x0:
                    /* 11101110 1......0 ....1111 .0.0...0 */
                    /* ../target/arm/mve.decode:275 */
                    u.f_vmlaldav.x = extract32(insn, 12, 1);
                    u.f_vmlaldav.a = extract32(insn, 5, 1);
                    if (trans_VRMLALDAVH_S(ctx, &u.f_vmlaldav)) return true;
                    break;
                case 0x1:
                    /* 11111110 1......0 ....1111 .0.0...0 */
                    /* ../target/arm/mve.decode:276 */
                    u.f_vmlaldav.x = extract32(insn, 12, 1);
                    u.f_vmlaldav.a = extract32(insn, 5, 1);
                    if (trans_VRMLALDAVH_U(ctx, &u.f_vmlaldav)) return true;
                    break;
                }
                break;
            case 0x00010000:
                /* 111.1110 1......1 ....1111 .0.0...0 */
                switch (insn & 0x00021080) {
                case 0x00000000:
                    /* 111.1110 1.....01 ...01111 00.0...0 */
                    if ((insn & 0x00700000) == 0x00700000) {
                        /* 111.1110 1111..01 ...01111 00.0...0 */
                        /* ../target/arm/mve.decode:311 */
                        disas_mve_extract_disas_mve_Fmt_24(ctx, &u.f_disas_mve8, insn);
                        if (trans_VADDV(ctx, &u.f_disas_mve8)) return true;
                    }
                    if ((insn & 0x000c0000) == 0x00080000) {
                        /* 111.1110 1...1001 ...01111 00.0...0 */
                        /* ../target/arm/mve.decode:312 */
                        disas_mve_extract_disas_mve_Fmt_25(ctx, &u.f_disas_mve9, insn);
                        if (trans_VADDLV(ctx, &u.f_disas_mve9)) return true;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x00800f40:
            /* 111.1110 1....... ....1111 .1.0.... */
            switch (insn & 0x10201080) {
            case 0x00000000:
                /* 11101110 1.0..... ...01111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11101110 1.00.... ...01111 01.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...01111 01.0...0 */
                        /* ../target/arm/mve.decode:399 */
                        if (trans_VQSHRNB_S(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11101110 1.00.... ...01111 01.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...01111 01.0...1 */
                        /* ../target/arm/mve.decode:413 */
                        if (trans_VQRSHRNB_S(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11101110 1.01.... ...01111 01.0...0 */
                    /* ../target/arm/mve.decode:400 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQSHRNB_S(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11101110 1.01.... ...01111 01.0...1 */
                    /* ../target/arm/mve.decode:414 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQRSHRNB_S(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x00000080:
                /* 11101110 1.0..... ...01111 11.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11101110 1.00.... ...01111 11.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...01111 11.0...0 */
                        /* ../target/arm/mve.decode:408 */
                        if (trans_VQSHRUNB(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11101110 1.00.... ...01111 11.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...01111 11.0...1 */
                        /* ../target/arm/mve.decode:389 */
                        if (trans_VSHRNB(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11101110 1.01.... ...01111 11.0...0 */
                    /* ../target/arm/mve.decode:409 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQSHRUNB(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11101110 1.01.... ...01111 11.0...1 */
                    /* ../target/arm/mve.decode:390 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHRNB(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x00001000:
                /* 11101110 1.0..... ...11111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11101110 1.00.... ...11111 01.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...11111 01.0...0 */
                        /* ../target/arm/mve.decode:401 */
                        if (trans_VQSHRNT_S(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11101110 1.00.... ...11111 01.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...11111 01.0...1 */
                        /* ../target/arm/mve.decode:415 */
                        if (trans_VQRSHRNT_S(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11101110 1.01.... ...11111 01.0...0 */
                    /* ../target/arm/mve.decode:402 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQSHRNT_S(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11101110 1.01.... ...11111 01.0...1 */
                    /* ../target/arm/mve.decode:416 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQRSHRNT_S(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x00001080:
                /* 11101110 1.0..... ...11111 11.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11101110 1.00.... ...11111 11.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...11111 11.0...0 */
                        /* ../target/arm/mve.decode:410 */
                        if (trans_VQSHRUNT(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11101110 1.00.... ...11111 11.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.001... ...11111 11.0...1 */
                        /* ../target/arm/mve.decode:391 */
                        if (trans_VSHRNT(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11101110 1.01.... ...11111 11.0...0 */
                    /* ../target/arm/mve.decode:411 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQSHRUNT(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11101110 1.01.... ...11111 11.0...1 */
                    /* ../target/arm/mve.decode:392 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHRNT(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x00200000:
                /* 11101110 1.1..... ...01111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11101110 1.10.... ...01111 01.0...0 */
                    disas_mve_extract_2_shll_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.101... ...01111 01.0...0 */
                        /* ../target/arm/mve.decode:367 */
                        if (trans_VSHLL_BS(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11101110 1.11.... ...01111 01.0...0 */
                    /* ../target/arm/mve.decode:368 */
                    disas_mve_extract_2_shll_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_BS(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x00200080:
                /* 11101110 1.1..... ...01111 11.0.... */
                disas_mve_extract_disas_mve_Fmt_27(ctx, &u.f_disas_mve11, insn);
                switch ((insn >> 5) & 0x1) {
                case 0x0:
                    /* 11101110 1.1..... ...01111 1100.... */
                    /* ../target/arm/mve.decode:427 */
                    if (trans_VSHLC(ctx, &u.f_disas_mve11)) return true;
                    break;
                }
                break;
            case 0x00201000:
                /* 11101110 1.1..... ...11111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11101110 1.10.... ...11111 01.0...0 */
                    disas_mve_extract_2_shll_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11101110 1.101... ...11111 01.0...0 */
                        /* ../target/arm/mve.decode:373 */
                        if (trans_VSHLL_TS(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11101110 1.11.... ...11111 01.0...0 */
                    /* ../target/arm/mve.decode:374 */
                    disas_mve_extract_2_shll_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_TS(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x10000000:
                /* 11111110 1.0..... ...01111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11111110 1.00.... ...01111 01.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...01111 01.0...0 */
                        /* ../target/arm/mve.decode:403 */
                        if (trans_VQSHRNB_U(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11111110 1.00.... ...01111 01.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...01111 01.0...1 */
                        /* ../target/arm/mve.decode:417 */
                        if (trans_VQRSHRNB_U(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11111110 1.01.... ...01111 01.0...0 */
                    /* ../target/arm/mve.decode:404 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQSHRNB_U(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11111110 1.01.... ...01111 01.0...1 */
                    /* ../target/arm/mve.decode:418 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQRSHRNB_U(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x10000080:
                /* 11111110 1.0..... ...01111 11.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11111110 1.00.... ...01111 11.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...01111 11.0...0 */
                        /* ../target/arm/mve.decode:422 */
                        if (trans_VQRSHRUNB(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11111110 1.00.... ...01111 11.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...01111 11.0...1 */
                        /* ../target/arm/mve.decode:394 */
                        if (trans_VRSHRNB(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11111110 1.01.... ...01111 11.0...0 */
                    /* ../target/arm/mve.decode:423 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQRSHRUNB(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11111110 1.01.... ...01111 11.0...1 */
                    /* ../target/arm/mve.decode:395 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VRSHRNB(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x10001000:
                /* 11111110 1.0..... ...11111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11111110 1.00.... ...11111 01.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...11111 01.0...0 */
                        /* ../target/arm/mve.decode:405 */
                        if (trans_VQSHRNT_U(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11111110 1.00.... ...11111 01.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...11111 01.0...1 */
                        /* ../target/arm/mve.decode:419 */
                        if (trans_VQRSHRNT_U(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11111110 1.01.... ...11111 01.0...0 */
                    /* ../target/arm/mve.decode:406 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQSHRNT_U(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11111110 1.01.... ...11111 01.0...1 */
                    /* ../target/arm/mve.decode:420 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQRSHRNT_U(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x10001080:
                /* 11111110 1.0..... ...11111 11.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11111110 1.00.... ...11111 11.0...0 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...11111 11.0...0 */
                        /* ../target/arm/mve.decode:424 */
                        if (trans_VQRSHRUNT(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00000001:
                    /* 11111110 1.00.... ...11111 11.0...1 */
                    disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.001... ...11111 11.0...1 */
                        /* ../target/arm/mve.decode:396 */
                        if (trans_VRSHRNT(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11111110 1.01.... ...11111 11.0...0 */
                    /* ../target/arm/mve.decode:425 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VQRSHRUNT(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00100001:
                    /* 11111110 1.01.... ...11111 11.0...1 */
                    /* ../target/arm/mve.decode:397 */
                    disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                    if (trans_VRSHRNT(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x10200000:
                /* 11111110 1.1..... ...01111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11111110 1.10.... ...01111 01.0...0 */
                    disas_mve_extract_2_shll_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.101... ...01111 01.0...0 */
                        /* ../target/arm/mve.decode:370 */
                        if (trans_VSHLL_BU(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11111110 1.11.... ...01111 01.0...0 */
                    /* ../target/arm/mve.decode:371 */
                    disas_mve_extract_2_shll_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_BU(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            case 0x10201000:
                /* 11111110 1.1..... ...11111 01.0.... */
                switch (insn & 0x00100001) {
                case 0x00000000:
                    /* 11111110 1.10.... ...11111 01.0...0 */
                    disas_mve_extract_2_shll_b(ctx, &u.f_2shift, insn);
                    switch ((insn >> 19) & 0x1) {
                    case 0x1:
                        /* 11111110 1.101... ...11111 01.0...0 */
                        /* ../target/arm/mve.decode:376 */
                        if (trans_VSHLL_TU(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                case 0x00100000:
                    /* 11111110 1.11.... ...11111 01.0...0 */
                    /* ../target/arm/mve.decode:377 */
                    disas_mve_extract_2_shll_h(ctx, &u.f_2shift, insn);
                    if (trans_VSHLL_TU(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0xef000000u:
        /* 111.1111 ........ ........ ........ */
        switch (insn & 0x00801050) {
        case 0x00000040:
            /* 111.1111 0....... ...0.... .1.0.... */
            switch (insn & 0x10010f01) {
            case 0x00000000:
                /* 11101111 0......0 ...00000 .1.0...0 */
                /* ../target/arm/mve.decode:171 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VHADD_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000100:
                /* 11101111 0......0 ...00001 .1.0...0 */
                /* ../target/arm/mve.decode:214 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VRHADD_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000200:
                /* 11101111 0......0 ...00010 .1.0...0 */
                /* ../target/arm/mve.decode:173 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VHSUB_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000400:
                /* 11101111 0......0 ...00100 .1.0...0 */
                /* ../target/arm/mve.decode:189 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VSHL_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000500:
                /* 11101111 0......0 ...00101 .1.0...0 */
                /* ../target/arm/mve.decode:192 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VRSHL_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000600:
                /* 11101111 0......0 ...00110 .1.0...0 */
                /* ../target/arm/mve.decode:163 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMAX_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000700:
                /* 11101111 0......0 ...00111 .1.0...0 */
                /* ../target/arm/mve.decode:168 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VABD_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000800:
                /* 11101111 0......0 ...01000 .1.0...0 */
                /* ../target/arm/mve.decode:129 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VADD(ctx, &u.f_2op)) return true;
                break;
            case 0x00000b00:
                /* 11101111 0......0 ...01011 .1.0...0 */
                /* ../target/arm/mve.decode:181 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQDMULH(ctx, &u.f_2op)) return true;
                break;
            case 0x10000000:
                /* 11111111 0......0 ...00000 .1.0...0 */
                /* ../target/arm/mve.decode:172 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VHADD_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000100:
                /* 11111111 0......0 ...00001 .1.0...0 */
                /* ../target/arm/mve.decode:215 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VRHADD_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000200:
                /* 11111111 0......0 ...00010 .1.0...0 */
                /* ../target/arm/mve.decode:174 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VHSUB_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000400:
                /* 11111111 0......0 ...00100 .1.0...0 */
                /* ../target/arm/mve.decode:190 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VSHL_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000500:
                /* 11111111 0......0 ...00101 .1.0...0 */
                /* ../target/arm/mve.decode:193 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VRSHL_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000600:
                /* 11111111 0......0 ...00110 .1.0...0 */
                /* ../target/arm/mve.decode:164 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMAX_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000700:
                /* 11111111 0......0 ...00111 .1.0...0 */
                /* ../target/arm/mve.decode:169 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VABD_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000800:
                /* 11111111 0......0 ...01000 .1.0...0 */
                /* ../target/arm/mve.decode:130 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VSUB(ctx, &u.f_2op)) return true;
                break;
            case 0x10000b00:
                /* 11111111 0......0 ...01011 .1.0...0 */
                /* ../target/arm/mve.decode:182 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQRDMULH(ctx, &u.f_2op)) return true;
                break;
            }
            break;
        case 0x00000050:
            /* 111.1111 0....... ...0.... .1.1.... */
            switch (insn & 0x10010f01) {
            case 0x00000000:
                /* 11101111 0......0 ...00000 .1.1...0 */
                /* ../target/arm/mve.decode:184 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQADD_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000100:
                /* 11101111 0......0 ...00001 .1.1...0 */
                disas_mve_extract_2op_nosz(ctx, &u.f_2op, insn);
                switch ((insn >> 20) & 0x3) {
                case 0x0:
                    /* 11101111 0.00...0 ...00001 .1.1...0 */
                    /* ../target/arm/mve.decode:123 */
                    if (trans_VAND(ctx, &u.f_2op)) return true;
                    break;
                case 0x1:
                    /* 11101111 0.01...0 ...00001 .1.1...0 */
                    /* ../target/arm/mve.decode:124 */
                    if (trans_VBIC(ctx, &u.f_2op)) return true;
                    break;
                case 0x2:
                    /* 11101111 0.10...0 ...00001 .1.1...0 */
                    /* ../target/arm/mve.decode:125 */
                    if (trans_VORR(ctx, &u.f_2op)) return true;
                    break;
                case 0x3:
                    /* 11101111 0.11...0 ...00001 .1.1...0 */
                    /* ../target/arm/mve.decode:126 */
                    if (trans_VORN(ctx, &u.f_2op)) return true;
                    break;
                }
                break;
            case 0x00000200:
                /* 11101111 0......0 ...00010 .1.1...0 */
                /* ../target/arm/mve.decode:186 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQSUB_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000400:
                /* 11101111 0......0 ...00100 .1.1...0 */
                /* ../target/arm/mve.decode:195 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VQSHL_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000500:
                /* 11101111 0......0 ...00101 .1.1...0 */
                /* ../target/arm/mve.decode:198 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VQRSHL_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000600:
                /* 11101111 0......0 ...00110 .1.1...0 */
                /* ../target/arm/mve.decode:165 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMIN_S(ctx, &u.f_2op)) return true;
                break;
            case 0x00000900:
                /* 11101111 0......0 ...01001 .1.1...0 */
                /* ../target/arm/mve.decode:131 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMUL(ctx, &u.f_2op)) return true;
                break;
            case 0x10000000:
                /* 11111111 0......0 ...00000 .1.1...0 */
                /* ../target/arm/mve.decode:185 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQADD_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000100:
                /* 11111111 0......0 ...00001 .1.1...0 */
                disas_mve_extract_2op_nosz(ctx, &u.f_2op, insn);
                switch ((insn >> 20) & 0x3) {
                case 0x0:
                    /* 11111111 0.00...0 ...00001 .1.1...0 */
                    /* ../target/arm/mve.decode:127 */
                    if (trans_VEOR(ctx, &u.f_2op)) return true;
                    break;
                }
                break;
            case 0x10000200:
                /* 11111111 0......0 ...00010 .1.1...0 */
                /* ../target/arm/mve.decode:187 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VQSUB_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000400:
                /* 11111111 0......0 ...00100 .1.1...0 */
                /* ../target/arm/mve.decode:196 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VQSHL_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000500:
                /* 11111111 0......0 ...00101 .1.1...0 */
                /* ../target/arm/mve.decode:199 */
                disas_mve_extract_2op_rev(ctx, &u.f_2op, insn);
                if (trans_VQRSHL_U(ctx, &u.f_2op)) return true;
                break;
            case 0x10000600:
                /* 11111111 0......0 ...00110 .1.1...0 */
                /* ../target/arm/mve.decode:166 */
                disas_mve_extract_2op(ctx, &u.f_2op, insn);
                if (trans_VMIN_U(ctx, &u.f_2op)) return true;
                break;
            }
            break;
        case 0x00800040:
            /* 111.1111 1....... ...0.... .1.0.... */
            switch (insn & 0x10330f81) {
            case 0x10300000:
                /* 11111111 1.11..00 ...00000 01.0...0 */
                /* ../target/arm/mve.decode:238 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VREV64(ctx, &u.f_1op)) return true;
                break;
            case 0x10300080:
                /* 11111111 1.11..00 ...00000 11.0...0 */
                /* ../target/arm/mve.decode:237 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VREV32(ctx, &u.f_1op)) return true;
                break;
            case 0x10300100:
                /* 11111111 1.11..00 ...00001 01.0...0 */
                /* ../target/arm/mve.decode:236 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VREV16(ctx, &u.f_1op)) return true;
                break;
            case 0x10300400:
                /* 11111111 1.11..00 ...00100 01.0...0 */
                /* ../target/arm/mve.decode:233 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VCLS(ctx, &u.f_1op)) return true;
                break;
            case 0x10300480:
                /* 11111111 1.11..00 ...00100 11.0...0 */
                /* ../target/arm/mve.decode:234 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VCLZ(ctx, &u.f_1op)) return true;
                break;
            case 0x10300580:
                /* 11111111 1.11..00 ...00101 11.0...0 */
                disas_mve_extract_1op_nosz(ctx, &u.f_1op, insn);
                switch ((insn >> 18) & 0x3) {
                case 0x0:
                    /* 11111111 1.110000 ...00101 11.0...0 */
                    /* ../target/arm/mve.decode:240 */
                    if (trans_VMVN(ctx, &u.f_1op)) return true;
                    break;
                }
                break;
            case 0x10310300:
                /* 11111111 1.11..01 ...00011 01.0...0 */
                /* ../target/arm/mve.decode:242 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VABS(ctx, &u.f_1op)) return true;
                break;
            case 0x10310380:
                /* 11111111 1.11..01 ...00011 11.0...0 */
                /* ../target/arm/mve.decode:244 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VNEG(ctx, &u.f_1op)) return true;
                break;
            case 0x10310700:
                /* 11111111 1.11..01 ...00111 01.0...0 */
                /* ../target/arm/mve.decode:243 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VABS_fp(ctx, &u.f_1op)) return true;
                break;
            case 0x10310780:
                /* 11111111 1.11..01 ...00111 11.0...0 */
                /* ../target/arm/mve.decode:245 */
                disas_mve_extract_1op(ctx, &u.f_1op, insn);
                if (trans_VNEG_fp(ctx, &u.f_1op)) return true;
                break;
            }
            break;
        case 0x00800050:
            /* 111.1111 1....... ...0.... .1.1.... */
            switch (insn & 0x00200080) {
            case 0x00000000:
                /* 111.1111 1.0..... ...0.... 01.1.... */
                switch ((insn >> 20) & 0x1) {
                case 0x0:
                    /* 111.1111 1.00.... ...0.... 01.1.... */
                    switch ((insn >> 19) & 0x1) {
                    case 0x0:
                        /* 111.1111 1.000... ...0.... 01.1.... */
                        /* ../target/arm/mve.decode:330 */
                        disas_mve_extract_1imm(ctx, &u.f_1imm, insn);
                        if (trans_Vimm_1r(ctx, &u.f_1imm)) return true;
                        break;
                    case 0x1:
                        /* 111.1111 1.001... ...0.... 01.1.... */
                        switch (insn & 0x10000f01) {
                        case 0x00000000:
                            /* 11101111 1.001... ...00000 01.1...0 */
                            /* ../target/arm/mve.decode:350 */
                            disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                            if (trans_VSHRI_S(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x00000200:
                            /* 11101111 1.001... ...00010 01.1...0 */
                            /* ../target/arm/mve.decode:358 */
                            disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                            if (trans_VRSHRI_S(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x00000500:
                            /* 11101111 1.001... ...00101 01.1...0 */
                            /* ../target/arm/mve.decode:334 */
                            disas_mve_extract_2_shl_b(ctx, &u.f_2shift, insn);
                            if (trans_VSHLI(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x00000700:
                            /* 11101111 1.001... ...00111 01.1...0 */
                            /* ../target/arm/mve.decode:338 */
                            disas_mve_extract_2_shl_b(ctx, &u.f_2shift, insn);
                            if (trans_VQSHLI_S(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x10000000:
                            /* 11111111 1.001... ...00000 01.1...0 */
                            /* ../target/arm/mve.decode:354 */
                            disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                            if (trans_VSHRI_U(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x10000200:
                            /* 11111111 1.001... ...00010 01.1...0 */
                            /* ../target/arm/mve.decode:362 */
                            disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                            if (trans_VRSHRI_U(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x10000400:
                            /* 11111111 1.001... ...00100 01.1...0 */
                            /* ../target/arm/mve.decode:380 */
                            disas_mve_extract_2_shr_b(ctx, &u.f_2shift, insn);
                            if (trans_VSRI(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x10000500:
                            /* 11111111 1.001... ...00101 01.1...0 */
                            /* ../target/arm/mve.decode:384 */
                            disas_mve_extract_2_shl_b(ctx, &u.f_2shift, insn);
                            if (trans_VSLI(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x10000600:
                            /* 11111111 1.001... ...00110 01.1...0 */
                            /* ../target/arm/mve.decode:346 */
                            disas_mve_extract_2_shl_b(ctx, &u.f_2shift, insn);
                            if (trans_VQSHLUI(ctx, &u.f_2shift)) return true;
                            break;
                        case 0x10000700:
                            /* 11111111 1.001... ...00111 01.1...0 */
                            /* ../target/arm/mve.decode:342 */
                            disas_mve_extract_2_shl_b(ctx, &u.f_2shift, insn);
                            if (trans_VQSHLI_U(ctx, &u.f_2shift)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x1:
                    /* 111.1111 1.01.... ...0.... 01.1.... */
                    switch (insn & 0x10000f01) {
                    case 0x00000000:
                        /* 11101111 1.01.... ...00000 01.1...0 */
                        /* ../target/arm/mve.decode:351 */
                        disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                        if (trans_VSHRI_S(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x00000200:
                        /* 11101111 1.01.... ...00010 01.1...0 */
                        /* ../target/arm/mve.decode:359 */
                        disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                        if (trans_VRSHRI_S(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x00000500:
                        /* 11101111 1.01.... ...00101 01.1...0 */
                        /* ../target/arm/mve.decode:335 */
                        disas_mve_extract_2_shl_h(ctx, &u.f_2shift, insn);
                        if (trans_VSHLI(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x00000700:
                        /* 11101111 1.01.... ...00111 01.1...0 */
                        /* ../target/arm/mve.decode:339 */
                        disas_mve_extract_2_shl_h(ctx, &u.f_2shift, insn);
                        if (trans_VQSHLI_S(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x10000000:
                        /* 11111111 1.01.... ...00000 01.1...0 */
                        /* ../target/arm/mve.decode:355 */
                        disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                        if (trans_VSHRI_U(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x10000200:
                        /* 11111111 1.01.... ...00010 01.1...0 */
                        /* ../target/arm/mve.decode:363 */
                        disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                        if (trans_VRSHRI_U(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x10000400:
                        /* 11111111 1.01.... ...00100 01.1...0 */
                        /* ../target/arm/mve.decode:381 */
                        disas_mve_extract_2_shr_h(ctx, &u.f_2shift, insn);
                        if (trans_VSRI(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x10000500:
                        /* 11111111 1.01.... ...00101 01.1...0 */
                        /* ../target/arm/mve.decode:385 */
                        disas_mve_extract_2_shl_h(ctx, &u.f_2shift, insn);
                        if (trans_VSLI(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x10000600:
                        /* 11111111 1.01.... ...00110 01.1...0 */
                        /* ../target/arm/mve.decode:347 */
                        disas_mve_extract_2_shl_h(ctx, &u.f_2shift, insn);
                        if (trans_VQSHLUI(ctx, &u.f_2shift)) return true;
                        break;
                    case 0x10000700:
                        /* 11111111 1.01.... ...00111 01.1...0 */
                        /* ../target/arm/mve.decode:343 */
                        disas_mve_extract_2_shl_h(ctx, &u.f_2shift, insn);
                        if (trans_VQSHLI_U(ctx, &u.f_2shift)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x00200000:
                /* 111.1111 1.1..... ...0.... 01.1.... */
                switch (insn & 0x10000f01) {
                case 0x00000000:
                    /* 11101111 1.1..... ...00000 01.1...0 */
                    /* ../target/arm/mve.decode:352 */
                    disas_mve_extract_2_shr_w(ctx, &u.f_2shift, insn);
                    if (trans_VSHRI_S(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00000200:
                    /* 11101111 1.1..... ...00010 01.1...0 */
                    /* ../target/arm/mve.decode:360 */
                    disas_mve_extract_2_shr_w(ctx, &u.f_2shift, insn);
                    if (trans_VRSHRI_S(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00000500:
                    /* 11101111 1.1..... ...00101 01.1...0 */
                    /* ../target/arm/mve.decode:336 */
                    disas_mve_extract_2_shl_w(ctx, &u.f_2shift, insn);
                    if (trans_VSHLI(ctx, &u.f_2shift)) return true;
                    break;
                case 0x00000700:
                    /* 11101111 1.1..... ...00111 01.1...0 */
                    /* ../target/arm/mve.decode:340 */
                    disas_mve_extract_2_shl_w(ctx, &u.f_2shift, insn);
                    if (trans_VQSHLI_S(ctx, &u.f_2shift)) return true;
                    break;
                case 0x10000000:
                    /* 11111111 1.1..... ...00000 01.1...0 */
                    /* ../target/arm/mve.decode:356 */
                    disas_mve_extract_2_shr_w(ctx, &u.f_2shift, insn);
                    if (trans_VSHRI_U(ctx, &u.f_2shift)) return true;
                    break;
                case 0x10000200:
                    /* 11111111 1.1..... ...00010 01.1...0 */
                    /* ../target/arm/mve.decode:364 */
                    disas_mve_extract_2_shr_w(ctx, &u.f_2shift, insn);
                    if (trans_VRSHRI_U(ctx, &u.f_2shift)) return true;
                    break;
                case 0x10000400:
                    /* 11111111 1.1..... ...00100 01.1...0 */
                    /* ../target/arm/mve.decode:382 */
                    disas_mve_extract_2_shr_w(ctx, &u.f_2shift, insn);
                    if (trans_VSRI(ctx, &u.f_2shift)) return true;
                    break;
                case 0x10000500:
                    /* 11111111 1.1..... ...00101 01.1...0 */
                    /* ../target/arm/mve.decode:386 */
                    disas_mve_extract_2_shl_w(ctx, &u.f_2shift, insn);
                    if (trans_VSLI(ctx, &u.f_2shift)) return true;
                    break;
                case 0x10000600:
                    /* 11111111 1.1..... ...00110 01.1...0 */
                    /* ../target/arm/mve.decode:348 */
                    disas_mve_extract_2_shl_w(ctx, &u.f_2shift, insn);
                    if (trans_VQSHLUI(ctx, &u.f_2shift)) return true;
                    break;
                case 0x10000700:
                    /* 11111111 1.1..... ...00111 01.1...0 */
                    /* ../target/arm/mve.decode:344 */
                    disas_mve_extract_2_shl_w(ctx, &u.f_2shift, insn);
                    if (trans_VQSHLI_U(ctx, &u.f_2shift)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    }
    return false;
}
